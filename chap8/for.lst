     1                                 %line 1+1 for.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 [segment .data]
    16 00000000 010000000000000002-    a dq 1, 2, 3, 4, 5, 6, 7, 8, 9, 0
    17 00000000 000000000000000300-
    18 00000000 000000000000040000-
    19 00000000 000000000005000000-
    20 00000000 000000000600000000-
    21 00000000 000000070000000000-
    22 00000000 000008000000000000-
    23 00000000 000900000000000000-
    24 00000000 0000000000000000   
    25 00000050 000000000000000001-    b dq 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
    26 00000050 000000000000000200-
    27 00000050 000000000000030000-
    28 00000050 000000000004000000-
    29 00000050 000000000500000000-
    30 00000050 000000060000000000-
    31 00000050 000007000000000000-
    32 00000050 000800000000000000-
    33 00000050 0900000000000000   
    34 000000A0 0000000000000000<rept>       c times 10 dq 0
    35 000000F0 0A00000000000000       n dq 10
    36                                 [global _start]
    37                                 [segment .text]
    38                                 _start:
    39                                 
    40 00000000 55                      push rbp
    41 00000001 4889E5                  mov rbp, rsp
    42 00000004 4883EC10                sub rsp, 16
    43                                 
    44                                 
    45                                 
    46                                 
    47                                 
    48                                 
    49                                 
    50 00000008 488B1425[00000000]      mov rdx, [n]
    51 00000010 31C9                    xor ecx, ecx
    52                                 for:
    53 00000012 4839D1                  cmp rcx, rdx
    54 00000015 741B                    je end_for
    55 00000017 488B04CD[00000000]      mov rax, [a+rcx*8]
    56 0000001F 480304CD[00000000]      add rax, [b+rcx*8]
    57 00000027 488904CD[00000000]      mov [c+rcx*8], rax
    58 0000002F 48FFC1                  inc rcx
    59 00000032 EBDC                    jmp for
    60                                 end_for:
    61                                 
    62 00000034 31C0                    xor eax, eax
    63 00000036 C9                      leave
    64 00000037 C3                      ret
